void Comment01()
{
	// 1. 벽돌깨기 완성
	// 2. 리소스 매니저
}

void Comment02()
{
	// 함수를 사용하는 이유
	// - 1. 가독성
	// - 2. 코드 재활용(유지보수)

	// 개발하다보면 
	// 함수로 안 되어 있는 내용을 복사할 일도 생기고
	// 아니면 if땜질로 되게끔 만드는 경우도 있음

	// 정답일 수도 있음
	// 기본적으로 프로그래밍은 정상적으로 돌아가기만 하면 다 정답
	// 그 이후로 어떻게 유지보수 할 때 잘할 수 있나. << 다음에 생각해야하는 것.

	// 계속 생각하면서 코드를 짜다보면 누구나 언젠간 할 수 있게 됨

	// 기획이 다이나믹하게 바뀌었을 때를 상상하면 정답이 추론됨..
	// 단, if문은 &&&&||||로 되게 기괴해질 가능성이 농후..

	// 코드 줄 수는 길어도 괜찮다.
}

void Comment03()
{
	// 리소스 매니저란 무엇인가?

	// 게임 보면
	// 2D이미지도 있고, 3D모델링도 있고
	// 사운도도 나온다
	// --> 용량이 상당히 크다

	// 용량이 상당히 크다는 것은 솔루션 안에 넣기 힘들다는 뜻.

	// 용량이 큰 리소스들은 windows에서 기본으로 제공해주는 리소스 관련 기능으로는 어려움
	// 결국 리소스는 외부에서 리소스를 로딩해줘야 함
	// 실제로 exe 파일은 100MB인 반면, 리소스 파일은 30GB이런 경우가 많음.

	// 결국 리소스 매니저는
	// 외부에서 오는 리소소들을 관리해주는 매니저이다.



	// 리소스를 만들건데
	// Texture와 Sprite부터 만들 것
	
	// Texture와 Sprite의 차이
	// Texture : Image -> 원본
	//					투명색 지정 가능
	// Sprite : Image -> 일부
}

// 숙제
// 두더지 게임, 똥피하기 게임 다시 완성해 오기.