#include "pch.h"

void Comment01()
{
	// 수업 예정 변경
	// 파워디펜스 게임 먼저 만들고
	//	-> 여기에 서버를 붙여나가는 형식

	// 오늘 데이터매니저까지만 만들고 서버를 먼저 진행
	//	-> 서버가 끝나면 게임을 만드는 거랑 네트워크 연동 동시에 진행


	// 여태까지 만든 내용으로 타워디펜스를 만들 수 있음.

	// 서버 (C#으로 새롭게 배움)
	// 할수있는 학생이라도 타워디펜스를 먼저 만들어보는 시간을 주는 게,,

	// C#이라는 새로운 언어 -> 서버(웹서버)
	
	// 서버 연동으로 게임 만들기.
	// + 당장 쓸 수 있는 이미지가 없음.
	// 이미지 제작을 하는 시간을 벌 수도 있음.
}

void Comment02()
{
	// Data Manager
	// 1. 게임에서 사용하는 데이터를 어떻게 관리할 것인가?
	// 기획자가 입력하기 편해야함.

	// 데이터
	//	- 여러가지 형태로 게임의 데이터를 저장

	// 1. text or binary
	// 2. excel
	// 3. json(구조체를 text로 변환하는 방법 중 하나)

	// 그래서 json이 무엇인가?

	// 데이터 -> Parse를 해야함.
	// Parse란?
	// 데이터를 원하는 데이터로 가공하는 작업

	// JsonParse는 C++에는 따로 지원해주는 함수가 없음.
	// 다만 만들어둔 Library가 상당히 많음.
	// 보통 게임회사에서 많이 쓰는 Json Library
	// RapidJson  (Tencent라는 게임회사에서 제작)

	// 좋은 라이브러리 판별법
	// 라이브러리를 써야하는 상황 (추천받아서 사용하는 경우 제외)
	//	- 무슨 기능을 구현해야하는데, 너무 만들어야하는 기능이 분명하고, 누군가가 만들어두었을 거 같을 때.
	
	//	most star -> 좋아요 개수
	// star 수가 어느정도는 되어 있어야 안정적인 라이브러리
	// github에서 라이브러리 성능에 대해 따로 검증해주지 않음.

	// 1. star수가 1K이상인지
	// 2. Release가 계속 이어져오고 있는지
	// 3. Issue가 계속 수정되고 있는지

	// 라이브러리 사용법
	// 1. Installation
	// 2. Usage
	// 를 무작정 따라한다.

	// (새 프로젝트를 파서 하기)


}