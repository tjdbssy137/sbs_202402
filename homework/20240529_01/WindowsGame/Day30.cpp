#include "pch.h"

void Comment1()
{
	// 수업할 내용.

	// 1. 사운드 매니저 ( 별로 안중요한내용. )
	//  - 사운드코드는 진짜 쓸줄만 알면 됩니다.
	//  - 모든엔진에서 사운드를 그렇게 깊게 안다뤄요.
	//  - 어떻게 시작하는지. 어떻게 사운드파일을 로드하는지. (로드하는방법도 별로 안중요함)

	// 사실 사운드매니저는 따라치는게 전부에요.
	// 네 저도 인터넷소스 없으면 못칩니다. 
	// 굳이 알필요도없어요.

	// 사운드전용으로 하는 팀
	// 이 팀에서도 사운드 관련코드는 그때그때 라이브러리 가져다 씁니다.
	

	// 2. 충돌체크

	// 3. UI

}

void Comment2()
{
	// 사운드매니저 

	// 사운드
	//  - 외부 리소스파일

	// 사운드 실행
	//  - 사운드카드
	//  - 아주 옛날에는 CPU 인텔, AMD 
	//  사운드카드도 제조사마다 다다르게 있었다고합니다.
	// - MS에서 규격을 하나 내고 이거아니면 윈도우에서 안받아주겠다.

	// 버퍼 : byte array
	// 모든파일은 byte array로 이루어져있습니다.
}

void Comment3()
{
	//컨텐츠 분리 
	// (#define USE SOUND)


	// 1. 아리 리메이크 (5월 1주차)
	// 2. 파이크 신규추가 (5월 2주차)

	//5월1주차와 5월 2주차 사이에는 코드를 업데이트하면 안되나??

	// 기존업데이트
	//  [코드분리]
	// 신규업데이트

	//#define USE_SOUND

	//#ifdef USE_SOUND
	////USE SOUND 를 하면 실행되는곳
	//#else
	////USE SOUND 를 하지않으면 실행되는곳
	//#endif
}

//숙제는 2048
void Comment4()
{
	// 충돌체크
	// 게임에서의 충돌체크 (2D)

	// [원, 사각형, 점]
	// 많이쓰는 이유 : 제일 가볍습니다.
	// 충돌로직 되게 계산할게 많아요.

	// 계산시간이 오래걸려요.
	//  - 매프레임. 체크를해줘야하는데
	//  - 매프레임 호출되는것중에서 계산시간이 오래걸리는건 안쓰려고해요.
	//   프레임이 튀어요.
	//  철권하는데 1프레임씩 0.1초걸린다고하면
	//  사람들이 그 게임 안하겠죠.

	// 최적화는 리소스로 하지만
	// 충돌체크만큼은.. 로직에서 한다.


	// CircleCollider 
	// Box <-> Box ( 구현완료 )
	// Circle <-> Circle (구현)
	//	- 게임수학으로 알아둬야 합니다. 
	//  - 하는방법 생각하시면서 9시까지 
	// 
	// Box <-> Circle (구현)
	//  - 얘는 안물어봐요.
}

void Comment5()
{
	//Circle <-> Circle
	// Circle1, Circle2 => 중심좌표
	// 중심좌표의 사이 <= (Circle1 반지름 + Circle2 반지름)
	// 충돌인거에요.

}

void Comment6()
{
	//퍼포먼스 테스트
	// 특정함수나, 특정 코드가 얼마나 오래걸리는지 테스트해보는것.
	// 단위테스트, UnitTest

	// 이런 테스트의 경우에는
	// 백만번실행.

}